generator client {
  provider = "prisma-client-js"
  engineType = "binary"
}


datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Pemeriksaan {
  id_pemeriksaan     Int        @id @default(autoincrement())
  tanggal_pemeriksaan String
  jenis_pemeriksaan  String
  penjelasan         String
  keterangan         String
  status             String
  foto               String
  safety_switch Boolean
  kabellistrik1 Boolean
  kabellistrik2 Boolean
  kabellistrik3 Boolean
  kabellistrik4 Boolean
  kabellistrik5 Boolean
  Batteraiaccu1 Boolean
  Batteraiaccu2 Boolean
  Batteraiaccu3 Boolean
  Batteraiaccu4 Boolean
}

model Petugas {
  id_petugas    Int           @id @default(autoincrement())
  nomor_petugas Int?          @unique
  nama_petugas  String
  userId        Int           // Field untuk menyimpan id user
  user          User          @relation(fields: [userId], references: [id]) // Relasi dengan User
}

model Transportir {
  id_sopir     Int           @id @default(autoincrement())
  nama_sopir   String
  nomer_LO     Int?
  userId       Int           // Field untuk menyimpan id user
  user         User          @relation(fields: [userId], references: [id]) // Relasi dengan User
}

model User {
  id             Int           @id @default(autoincrement())
  username       String        @unique
  password       String
  roleId         Int
  role           Role          @relation(fields: [roleId], references: [id])
  nama_perusahaan String
  perusahaan     Perusahaan[]
  sopir          Transportir[]       // Relasi satu ke banyak dengan Sopir

  Petugas Petugas[]
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}

model Perusahaan {
  id_perusahaan    Int           @id @default(autoincrement())
  id_user          Int           @unique
  tanggal_cek_fisik String?
  nomor_polisi     String?
  nama_perusahaan  String
  users            User?         @relation(fields: [id_user], references: [id])
}
